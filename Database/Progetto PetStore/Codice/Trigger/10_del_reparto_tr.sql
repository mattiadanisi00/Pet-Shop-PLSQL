/*
    TRIGGER #10 
    TRIGGER CHE IMPEDISCE DI ELIMINARE UN REPARTO SE CI SONO ANCORA PRODOTTI DISPONIBILI,ANIMALI O DIPENDENTI CHE CI LAVORANO âˆš
*/

/* test 
DELETE FROM REPARTO 
WHERE NUMERO_REPARTO=1; */

CREATE OR REPLACE TRIGGER DEL_REPARTO_TR
BEFORE DELETE ON REPARTO
FOR EACH ROW
DECLARE
    N_DIP                   NUMBER;
    N_AN                    NUMBER;
    REPARTO_POPOLATO        EXCEPTION;
    PRAGMA     AUTONOMOUS_TRANSACTION;
BEGIN
    
    SELECT COUNT(*) INTO N_DIP
    FROM DIPENDENTE WHERE NUMERO_REPARTO = :OLD.NUMERO_REPARTO;
    
    IF(N_DIP > 0) 
        THEN RAISE REPARTO_POPOLATO;
    END IF;
    
    SELECT COUNT (*) INTO N_AN
    FROM 
        (SELECT CODICE_ANIMALE,REPARTO FROM ANIMALE 
        MINUS
        SELECT CODICE_ANIMALE,REPARTO FROM (
            SELECT AD.CODICE_ANIMALE,REPARTO FROM ADOTTA AD JOIN ANIMALE AN ON AD.CODICE_ANIMALE = AN.CODICE_ANIMALE
            MINUS 
            SELECT R.CODICE_ANIMALE,REPARTO FROM RESTITUISCE R JOIN ANIMALE AN ON R.CODICE_ANIMALE = AN.CODICE_ANIMALE))
    WHERE REPARTO = :OLD.NUMERO_REPARTO;
    
    IF(N_AN > 0) 
        THEN RAISE REPARTO_POPOLATO;
    END IF;
    
    FOR i IN (SELECT QUANTITA_DISPONIBILE FROM PRODOTTO WHERE REPARTO = :OLD.NUMERO_REPARTO) LOOP
    
        IF(i.QUANTITA_DISPONIBILE > 0) THEN
            RAISE REPARTO_POPOLATO;
        END IF;
    
    END LOOP;
    
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        NULL;
        
    WHEN REPARTO_POPOLATO THEN
        RAISE_APPLICATION_ERROR(-20018,'CI SONO ANCORA DIPENDENTI,ANIMALI O PRODOTTI RIMASTI NEL REPARTO!');

END;
/
