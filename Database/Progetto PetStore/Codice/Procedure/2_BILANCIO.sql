-- ===============
-- BILANCIO TOTALE √
-- ===============
-- procedura che calcola il bilancio dell'azienda

CREATE OR REPLACE PROCEDURE BILANCIO IS -- Creo delle variabili in cui andrò a memorizzare le varie uscite/entrate 

STIPENDI            NUMBER(10,0); 
TOTALE_CONSEGNE     NUMBER(10,0); 
COSTO_VET           NUMBER(10,0);
COSTO_ADD           NUMBER(10,0);
RIMBORSI            NUMBER(10,0);
ACQUISTO_ANIMALI    NUMBER(10,0);
VENDITA_ANIMALI     NUMBER(10,0);
VENDITA_PRODOTTI    NUMBER(10,0);
VISITE_PC           NUMBER(10,0);
VISITE_VET          NUMBER(10,0);
CORSI               NUMBER(10,0);
ENTRATE             NUMBER(10,0);
USCITE              NUMBER(10,0);
CF_PIU_PAGATO       CHAR(16);
ANNO_CORRENTE       NUMBER(4,0);
     
BEGIN

  SELECT EXTRACT(YEAR FROM SYSDATE) INTO ANNO_CORRENTE --ricavo l'anno corrente
  FROM DUAL;

 SELECT  SUM(TOTALE_STIPENDIO) INTO STIPENDI 
  FROM STIPENDIO 
  WHERE EXTRACT(YEAR FROM DATA_STIPENDIO) IN (ANNO_CORRENTE); -- ricavo gli stipendi


DBMS_OUTPUT.PUT_LINE ('COSTI STIPENDI DIPENDENTI:'||STIPENDI);

 SELECT SUM(TOTALE) INTO TOTALE_CONSEGNE --costo delle consegne
 FROM COSTO_CONSEGNE
 WHERE EXTRACT(YEAR FROM DATA_CONSEGNA) IN (ANNO_CORRENTE);
 
 
DBMS_OUTPUT.PUT_LINE ('COSTI CONSEGNE:'||TOTALE_CONSEGNE);

 SELECT  SUM(TARIFFA_VETERINARIO),SUM(PREZZO_VISITA) INTO COSTO_VET,VISITE_VET  -- costi e ricavi delle visite vet
  FROM VISITA_VETERINARIO VV
  JOIN PRENOTAZIONE P ON P.CODICE_PRENOTAZIONE = VV.CODICE_PRENOTAZIONE
  WHERE EXTRACT(YEAR FROM DATA_PRENOTAZIONE) IN (ANNO_CORRENTE);

DBMS_OUTPUT.PUT_LINE ('COSTI VETERINARI:'||COSTO_VET);

 SELECT  SUM(TARIFFA_ADDESTRATORE) INTO COSTO_ADD -- Calcolo costi addestratore
  FROM CORSO_DI_ADDESTRAMENTO
  WHERE EXTRACT(YEAR FROM INIZIO_CORSO) IN (ANNO_CORRENTE);
DBMS_OUTPUT.PUT_LINE ('COSTI ADDESTRATORI:'||COSTO_ADD);

 SELECT  SUM(RIMBORSO) INTO RIMBORSI -- Calcolo costi rimborso animali
  FROM RESTITUISCE
  WHERE EXTRACT(YEAR FROM DATA_RESTITUZIONE) IN (ANNO_CORRENTE);

DBMS_OUTPUT.PUT_LINE ('COSTI INERENTI AI RIMBORSI:'||RIMBORSI); 

SELECT  SUM(COSTO_ACQUISIZIONE) INTO ACQUISTO_ANIMALI -- Calcolo costi acquisto animali
  FROM ANIMALE
  WHERE EXTRACT(YEAR FROM DATA_ACQUISIZIONE) IN (ANNO_CORRENTE);

 
DBMS_OUTPUT.PUT_LINE ('COSTI ACQUISTO ANIMALI:'||ACQUISTO_ANIMALI);

 
SELECT  SUM(PREZZO_VISITA) INTO VISITE_PC -- Calcolo guadagni dalle visite petcare
  FROM VISITA_PETCARE VP
  JOIN PRENOTAZIONE P ON P.CODICE_PRENOTAZIONE = VP.CODICE_PRENOTAZIONE
  WHERE EXTRACT(YEAR FROM DATA_PRENOTAZIONE) IN (ANNO_CORRENTE);
 
DBMS_OUTPUT.PUT_LINE ('ENTRATE VISITE PETCARE:'||VISITE_PC);
 
DBMS_OUTPUT.PUT_LINE ('ENTRATE VISITE VETERINARIO:'||VISITE_VET);

SELECT  SUM(PREZZO_ADOZIONE) INTO VENDITA_ANIMALI -- Calcolo guadagni dalla vendita di animali
  FROM ADOTTA
  WHERE EXTRACT(YEAR FROM DATA_ADOZIONE) IN (ANNO_CORRENTE);

 
DBMS_OUTPUT.PUT_LINE ('ENTRATE VENDITA ANIMALI:'||VENDITA_ANIMALI);

SELECT  SUM(COSTO_ISCRIZIONE) INTO CORSI -- Calcolo guadagni dall'iscrizione ai corsi 
  FROM SI_ISCRIVE SI JOIN CORSO_DI_ADDESTRAMENTO CDA ON 
  CDA.CODICE_CORSO = SI.CODICE_CORSO
  WHERE EXTRACT(YEAR FROM INIZIO_CORSO) IN (ANNO_CORRENTE);

DBMS_OUTPUT.PUT_LINE ('ENTRATE CORSI DI ADDESTRAMENTO:'||CORSI);


SELECT SUM(PREZZO*QUANTITA) INTO VENDITA_PRODOTTI -- Calcolo guadagni dalla vendita dei prodotti
  FROM ACQUISTO_CONTIENE AC JOIN PRODOTTO PR ON PR.CODICE_PRODOTTO = AC.CODICE_PRODOTTO
  JOIN ACQUISTO A ON A.NUMERO_SCONTRINO = AC.NUMERO_SCONTRINO
    WHERE EXTRACT(YEAR FROM DATA_ACQUISTO) IN (2022);
    
DBMS_OUTPUT.PUT_LINE ('ENTRATE VENDITA PRODOTTI:'||VENDITA_PRODOTTI);

ENTRATE := VENDITA_ANIMALI + VENDITA_PRODOTTI + VISITE_PC + VISITE_VET + CORSI;
USCITE := ACQUISTO_ANIMALI + STIPENDI + TOTALE_CONSEGNE + COSTO_ADD + COSTO_VET + RIMBORSI; -- Calcolo le entrate e le uscite

DBMS_OUTPUT.PUT_LINE ('ENTRATE TOTALI:' ||ENTRATE); -- Le stampo
DBMS_OUTPUT.PUT_LINE ('USCITE TOTALI:' ||USCITE);

IF(USCITE < ENTRATE) THEN DBMS_OUTPUT.PUT_LINE ('SEI IN POSITIVO!'); -- Determino l'andamento

ELSE 
DBMS_OUTPUT.PUT_LINE ('SEI IN NEGATIVO!');
/* se sono in negativo decido di eseguire tagli al budget licenziando il dipendente che prende piu soldi */
SELECT CF_DIPENDENTE INTO CF_PIU_PAGATO
FROM STIPENDIO 
WHERE TOTALE_STIPENDIO = (SELECT MAX(TOTALE_STIPENDIO) FROM STIPENDIO)
AND ROWNUM = 1;

LICENZIAMENTO(CF_PIU_PAGATO); -- richiamo la function licenziamento

END IF;
END;
/